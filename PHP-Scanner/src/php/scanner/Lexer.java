/* The following code was generated by JFlex 1.6.1 */

package php.scanner;

import static php.scanner.Token.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>C:/Users/mynor/OneDrive/Documentos/repos/JPHP-Scanner/PHP-Scanner/src/php/scanner/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\125\1\51\1\53\1\53\1\52\22\0\1\125\1\67\1\102"+
    "\1\123\1\40\1\63\1\70\1\101\1\74\1\74\1\61\1\60\1\100"+
    "\1\45\1\72\1\62\1\44\1\56\6\41\1\55\1\46\1\104\1\77"+
    "\1\64\1\66\1\65\1\103\1\0\1\47\1\110\1\114\1\122\1\5"+
    "\1\6\1\105\1\10\1\113\1\12\1\115\1\106\1\15\1\16\1\107"+
    "\1\112\1\116\1\22\1\111\1\24\1\25\1\26\1\121\1\30\1\12"+
    "\1\12\1\76\1\31\1\50\1\73\1\57\1\0\1\1\1\2\1\3"+
    "\1\4\1\36\1\37\1\7\1\117\1\11\1\12\1\13\1\14\1\120"+
    "\1\32\1\17\1\20\1\21\1\33\1\23\1\34\1\43\1\35\1\27"+
    "\1\42\1\124\1\12\1\75\1\71\1\75\1\0\6\12\1\54\172\12"+
    "\u1f28\0\1\53\1\53\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\27\2\1\1\1\3\1\2\1\3\1\4"+
    "\1\3\1\2\1\5\1\6\1\7\1\2\4\4\2\10"+
    "\1\11\1\12\1\1\1\11\1\13\1\11\1\14\1\15"+
    "\1\16\1\17\2\1\2\20\4\2\1\21\3\2\1\22"+
    "\10\2\1\20\14\2\1\12\24\2\7\23\2\1\2\0"+
    "\2\1\1\3\1\24\1\25\1\11\1\1\1\2\1\4"+
    "\1\0\1\10\2\0\1\12\1\24\2\0\1\26\2\0"+
    "\1\27\20\2\1\20\33\2\1\23\1\0\13\23\2\24"+
    "\1\0\2\3\1\0\11\2\1\1\2\0\12\2\1\20"+
    "\14\2\1\30\11\2\1\23\2\0\13\23\7\24\11\2"+
    "\2\0\1\21\1\0\30\2\1\22\1\2\1\31\3\0"+
    "\11\23\5\24\10\2\1\21\1\0\13\2\1\22\1\2"+
    "\1\32\11\23\2\24\7\2\1\20\5\2\1\22\2\2"+
    "\6\23\1\33\7\2\1\34\4\23\4\2\3\23\3\2"+
    "\3\23\1\2\3\23\1\2\3\23\1\2\2\23\1\2"+
    "\14\23";

  private static int [] zzUnpackAction() {
    int [] result = new int[432];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\126\0\254\0\u0102\0\u0158\0\u01ae\0\u0204\0\u025a"+
    "\0\u02b0\0\u0306\0\u035c\0\u03b2\0\u0408\0\u045e\0\u04b4\0\u050a"+
    "\0\u0560\0\u05b6\0\u060c\0\u0662\0\u06b8\0\u070e\0\u0764\0\u07ba"+
    "\0\u0810\0\u0866\0\u08bc\0\u0912\0\u0968\0\u09be\0\u0a14\0\u0a6a"+
    "\0\126\0\126\0\u0ac0\0\u0b16\0\u0b6c\0\u0bc2\0\u0c18\0\u0c6e"+
    "\0\u0cc4\0\u0d1a\0\u0d70\0\u0dc6\0\u0e1c\0\u0e72\0\u0ec8\0\u0c6e"+
    "\0\126\0\126\0\126\0\126\0\u0f1e\0\u0f74\0\u0fca\0\126"+
    "\0\u1020\0\u1076\0\u10cc\0\u1122\0\u1178\0\u11ce\0\u1224\0\u127a"+
    "\0\u0306\0\u12d0\0\u1326\0\u137c\0\u13d2\0\u1428\0\u147e\0\u14d4"+
    "\0\u152a\0\u0306\0\u1580\0\u15d6\0\u162c\0\u1682\0\u16d8\0\u172e"+
    "\0\u1784\0\u17da\0\u1830\0\u1886\0\u18dc\0\u1932\0\u0306\0\u1988"+
    "\0\u19de\0\u1a34\0\u1a8a\0\u1ae0\0\u1b36\0\u1b8c\0\u1be2\0\u1c38"+
    "\0\u1c8e\0\u1ce4\0\u1d3a\0\u1d90\0\u1de6\0\u1e3c\0\u1e92\0\u1ee8"+
    "\0\u1f3e\0\u1f94\0\u1fea\0\u2040\0\u2096\0\u20ec\0\u2142\0\u2198"+
    "\0\u21ee\0\u2244\0\u229a\0\u22f0\0\u2346\0\u239c\0\u23f2\0\u2448"+
    "\0\u249e\0\u24f4\0\126\0\126\0\u254a\0\u25a0\0\126\0\u25f6"+
    "\0\126\0\u264c\0\u26a2\0\126\0\u26f8\0\u0f1e\0\u274e\0\126"+
    "\0\u0f74\0\u27a4\0\126\0\u27fa\0\u2850\0\u28a6\0\u28fc\0\u2952"+
    "\0\u29a8\0\u29fe\0\u2a54\0\u2aaa\0\u2b00\0\u2b56\0\u2bac\0\u2c02"+
    "\0\u2c58\0\u2cae\0\u2d04\0\u2d5a\0\u2db0\0\u2e06\0\u2e5c\0\u2eb2"+
    "\0\u2f08\0\u2f5e\0\u2fb4\0\u300a\0\u3060\0\u30b6\0\u310c\0\u3162"+
    "\0\u31b8\0\u320e\0\u3264\0\u32ba\0\u3310\0\u3366\0\u33bc\0\u3412"+
    "\0\u3468\0\u34be\0\u3514\0\u356a\0\u35c0\0\u3616\0\u366c\0\u36c2"+
    "\0\u3718\0\u376e\0\u37c4\0\u381a\0\u3870\0\u38c6\0\u391c\0\u3972"+
    "\0\u39c8\0\u3a1e\0\u3a74\0\u3aca\0\u3b20\0\u3b76\0\u3bcc\0\u3c22"+
    "\0\u3c78\0\u3cce\0\u229a\0\u3d24\0\u3d7a\0\u3dd0\0\u3e26\0\u3e7c"+
    "\0\u3ed2\0\u3f28\0\u3f7e\0\u3fd4\0\u402a\0\u4080\0\u40d6\0\u412c"+
    "\0\u4182\0\u41d8\0\u422e\0\u4284\0\u42da\0\u4330\0\u4386\0\u43dc"+
    "\0\u2cae\0\u4432\0\u4488\0\u44de\0\u4534\0\u458a\0\u45e0\0\u4636"+
    "\0\u468c\0\u46e2\0\u4738\0\u478e\0\u47e4\0\u0306\0\u483a\0\u4890"+
    "\0\u48e6\0\u493c\0\u4992\0\u49e8\0\u4a3e\0\u4a94\0\u4aea\0\u4b40"+
    "\0\u4b96\0\u4bec\0\u4c42\0\u4c98\0\u4cee\0\u4d44\0\u4d9a\0\u4df0"+
    "\0\u4e46\0\u4e9c\0\u4ef2\0\u4f48\0\u4f9e\0\u4ff4\0\u504a\0\u50a0"+
    "\0\u50f6\0\u514c\0\u51a2\0\u51f8\0\u524e\0\u52a4\0\u52fa\0\u5350"+
    "\0\u53a6\0\u53fc\0\u5452\0\u54a8\0\u54fe\0\u3fd4\0\u5554\0\u55aa"+
    "\0\u5600\0\u5656\0\u56ac\0\u5702\0\u5758\0\u57ae\0\u5804\0\u585a"+
    "\0\u58b0\0\u5906\0\u595c\0\u59b2\0\u5a08\0\u5a5e\0\u5ab4\0\u5b0a"+
    "\0\u5b60\0\u5bb6\0\u5c0c\0\u5c62\0\u5cb8\0\u5d0e\0\u5d64\0\u5dba"+
    "\0\u5e10\0\u5e66\0\u5ebc\0\u2096\0\u5f12\0\u5f68\0\u5fbe\0\u6014"+
    "\0\u606a\0\u60c0\0\u6116\0\u616c\0\u61c2\0\u6218\0\u626e\0\u62c4"+
    "\0\u631a\0\u6370\0\u63c6\0\u641c\0\u6472\0\u64c8\0\u651e\0\u6574"+
    "\0\u65ca\0\u6620\0\u6676\0\u66cc\0\u6722\0\126\0\u55aa\0\u6778"+
    "\0\u67ce\0\u6824\0\u687a\0\u68d0\0\u6926\0\u697c\0\u69d2\0\u6a28"+
    "\0\u6a7e\0\u6ad4\0\u6b2a\0\u6b80\0\126\0\u6bd6\0\u6c2c\0\u6c82"+
    "\0\u6cd8\0\u6d2e\0\u6d84\0\u6dda\0\u6e30\0\u6e86\0\u6edc\0\u6f32"+
    "\0\u6f88\0\u6fde\0\u7034\0\u708a\0\u70e0\0\u7136\0\u718c\0\u71e2"+
    "\0\u7238\0\u728e\0\u72e4\0\u733a\0\u7390\0\u71e2\0\u73e6\0\u743c"+
    "\0\u7492\0\u74e8\0\u753e\0\u7594\0\u75ea\0\u7640\0\u0306\0\u7696"+
    "\0\u76ec\0\u7742\0\u7798\0\u77ee\0\u7844\0\u789a\0\u0306\0\u78f0"+
    "\0\u7946\0\u799c\0\u79f2\0\u7a48\0\u7a9e\0\u7af4\0\u7b4a\0\u7ba0"+
    "\0\u7bf6\0\u7c4c\0\u7ca2\0\u7cf8\0\u7d4e\0\u7da4\0\u7dfa\0\u7e50"+
    "\0\u7ea6\0\u7efc\0\u7f52\0\u7fa8\0\u7ffe\0\u8054\0\u80aa\0\u8100"+
    "\0\u8156\0\u81ac\0\u8202\0\u8258\0\u82ae\0\u8304\0\u835a\0\u83b0"+
    "\0\u8406\0\u845c\0\u84b2\0\u8508\0\u855e\0\u85b4\0\u860a\0\u8660";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[432];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\2\12\1\14\2\12\1\15\1\16\1\12"+
    "\1\17\1\20\1\21\2\12\1\22\1\23\1\2\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\23"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\0\1\12\2\33\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\41\1\63\1\64\1\65\1\66\1\67"+
    "\1\70\2\12\1\15\1\4\1\71\1\12\1\72\1\73"+
    "\4\12\1\22\1\74\1\75\1\76\1\43\127\0\1\12"+
    "\1\77\13\12\1\100\4\12\1\101\5\12\1\0\1\100"+
    "\1\102\4\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\21\12\1\103\6\12"+
    "\1\0\1\12\1\103\4\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\1\104"+
    "\12\12\1\105\2\12\1\106\11\12\1\0\6\12\1\0"+
    "\4\12\1\0\1\12\1\107\4\0\4\12\25\0\2\12"+
    "\1\110\13\12\1\0\1\12\2\0\10\12\1\111\5\12"+
    "\1\112\11\12\1\0\4\12\1\113\1\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\2\12\1\112\13\12"+
    "\1\0\1\12\2\0\13\12\1\114\1\12\1\115\12\12"+
    "\1\0\1\115\5\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\1\12\1\114\14\12\1\0\1\12\2\0"+
    "\1\116\15\12\1\117\11\12\1\0\6\12\1\0\4\12"+
    "\1\0\1\12\1\116\4\0\4\12\25\0\2\12\1\117"+
    "\13\12\1\0\1\12\2\0\13\12\1\120\2\12\1\121"+
    "\11\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\30\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\5\12\1\112\7\12\1\122"+
    "\4\12\1\123\5\12\1\0\1\124\4\12\1\112\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\13\12\1\125"+
    "\2\12\1\0\1\12\2\0\10\12\1\126\17\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\21\12\1\127\6\12\1\0"+
    "\1\12\1\127\4\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\30\12\1\0"+
    "\1\12\1\130\4\12\1\0\2\12\1\131\1\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\4\12\1\132\23\12\1\0\4\12\1\132\1\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\26\12\1\133\1\12\1\0\2\12\1\134"+
    "\3\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\14\12\1\133\1\12\1\0\1\12\2\0\21\12\1\135"+
    "\6\12\1\0\1\12\1\135\4\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\7\12\1\136\20\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\12\12\1\136\3\12\1\0"+
    "\1\12\2\0\16\12\1\15\11\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\2\12\1\15"+
    "\13\12\1\0\1\12\2\0\1\137\27\12\1\0\4\12"+
    "\1\140\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\4\12\1\132\23\12"+
    "\1\0\4\12\1\141\1\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\21\12"+
    "\1\135\6\12\1\0\1\12\1\142\4\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\12\12\1\143\3\12"+
    "\1\0\1\12\2\0\1\144\27\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\2\12\1\145\10\12\1\114\1\12\1\115"+
    "\12\12\1\0\1\146\2\12\1\147\2\12\1\0\1\12"+
    "\1\150\2\12\1\0\2\12\4\0\4\12\25\0\1\12"+
    "\1\114\11\12\1\151\2\12\1\0\1\12\2\0\1\116"+
    "\7\12\1\152\5\12\1\117\11\12\1\0\6\12\1\0"+
    "\2\12\1\153\1\12\1\0\1\12\1\116\4\0\4\12"+
    "\25\0\2\12\1\117\13\12\1\0\1\12\2\0\1\154"+
    "\6\155\1\156\7\155\1\157\10\155\1\0\6\155\2\0"+
    "\2\155\3\0\1\155\4\0\1\155\2\0\1\160\25\0"+
    "\1\161\11\155\1\162\3\155\1\0\1\155\2\0\4\163"+
    "\1\164\23\163\1\0\4\163\1\164\1\163\1\165\1\33"+
    "\2\163\1\33\1\0\1\33\1\163\4\0\1\163\2\33"+
    "\1\163\12\0\1\166\12\0\16\163\1\0\1\163\2\0"+
    "\22\12\1\111\5\12\1\0\1\123\5\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\1\163\1\167\2\163\1\164\22\163\1\170\1\0"+
    "\4\163\1\164\1\163\1\165\1\171\1\170\1\163\1\171"+
    "\1\0\1\172\1\163\4\0\1\163\1\172\1\171\1\163"+
    "\12\0\1\166\12\0\3\163\1\167\12\163\1\0\1\163"+
    "\42\0\1\33\2\0\1\35\1\173\1\33\6\0\2\33"+
    "\7\0\1\174\3\0\1\166\34\0\4\163\1\164\12\163"+
    "\1\175\10\163\1\0\4\163\1\164\1\163\1\165\1\33"+
    "\2\163\1\33\1\0\1\33\1\163\4\0\1\163\2\33"+
    "\1\163\12\0\1\166\12\0\16\163\1\0\1\163\2\0"+
    "\15\12\1\100\12\12\1\0\1\100\5\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\53\0\1\43\52\0\1\43\1\0\30\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\3\12\1\176\25\0"+
    "\16\12\1\0\1\12\42\0\1\33\2\0\1\35\1\0"+
    "\1\33\6\0\2\33\1\0\1\173\5\0\1\174\3\0"+
    "\1\166\114\0\1\177\4\0\1\174\120\0\1\200\1\75"+
    "\3\0\1\174\125\0\1\174\123\0\1\60\1\0\1\201"+
    "\14\0\1\202\107\0\1\60\1\201\125\0\1\201\1\203"+
    "\124\0\1\201\125\0\1\174\1\0\1\204\123\0\1\174"+
    "\2\0\1\204\75\0\1\205\2\0\1\205\1\0\1\205"+
    "\6\0\2\205\7\0\1\174\37\0\31\206\1\207\47\206"+
    "\1\210\24\206\31\211\1\212\50\211\1\210\23\211\65\0"+
    "\1\213\41\0\26\12\1\133\1\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\14\12\1\133"+
    "\1\12\1\0\1\12\2\0\5\12\1\112\7\12\1\122"+
    "\12\12\1\0\1\122\4\12\1\112\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\1\107\15\12\1\110\11\12\1\0\6\12\1\0\4\12"+
    "\1\0\1\12\1\107\4\0\4\12\25\0\2\12\1\110"+
    "\13\12\1\0\1\12\2\0\16\12\1\112\11\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\2\12\1\112\13\12\1\0\1\12\1\0\51\75\4\0"+
    "\51\75\1\0\10\12\1\214\17\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\22\12\1\215\5\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\3\12\1\127\24\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\15\12\1\127"+
    "\1\0\1\12\2\0\30\12\1\0\1\12\1\216\4\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\4\12\1\217\23\12\1\0\4\12"+
    "\1\217\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\13\12\1\220\6\12"+
    "\1\221\5\12\1\0\2\12\1\222\3\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\4\12\1\221\11\12"+
    "\1\0\1\12\2\0\1\223\15\12\1\224\11\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\15\12\1\225\12\12\1\0"+
    "\1\226\5\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\22\12\1\221\5\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\4\12\1\221\11\12\1\0\1\12\2\0\15\12"+
    "\1\225\12\12\1\0\1\225\5\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\4\12\1\101\1\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\2\12\1\227\25\12\1\0\5\12\1\230\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\22\12\1\231\5\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\4\12\1\231\11\12"+
    "\1\0\1\12\2\0\3\12\1\232\24\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\15\12"+
    "\1\232\1\0\1\12\2\0\13\12\1\233\14\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\1\12\1\233\14\12\1\0\1\12\2\0\21\12\1\234"+
    "\6\12\1\0\1\12\1\234\4\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\16\12\1\235\11\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\2\12\1\236\3\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\2\12\1\237\25\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\7\12\1\237\6\12\1\0"+
    "\1\12\2\0\22\12\1\240\5\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\2\12\1\241\17\12\1\242\5\12\1\0"+
    "\2\12\1\243\3\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\7\12\1\237\6\12\1\0\1\12\2\0"+
    "\17\12\1\244\10\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\22\12\1\245\5\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\10\12\1\246\5\12\1\247\11\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\1\12\1\250\26\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\23\12\1\251\4\12\1\0\2\12\1\251"+
    "\3\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\10\12\1\252\17\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\6\12\1\252\7\12\1\0\1\12\2\0\1\253\27\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\24\12\1\254\3\12"+
    "\1\0\6\12\1\0\2\12\1\254\1\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\10\12"+
    "\1\255\17\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\6\12\1\255\7\12\1\0\1\12"+
    "\2\0\30\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\13\12\1\256\2\12\1\0\1\12"+
    "\2\0\26\12\1\101\1\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\20\12\1\257\2\12\1\251\4\12\1\0\2\12"+
    "\1\251\3\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\1\260\23\12\1\254"+
    "\3\12\1\0\6\12\1\0\2\12\1\254\1\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\101\2\0"+
    "\30\12\1\0\1\12\1\261\4\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\1\12\1\101\4\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\12\12\1\236\3\12\1\0\1\12\2\0"+
    "\3\12\1\262\24\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\15\12\1\232\1\0\1\12"+
    "\2\0\1\263\27\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\10\12\1\245\17\12\1\0\2\12\1\264\3\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\17\12\1\265\10\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\30\12\1\0\1\266\5\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\30\12\1\0\1\267\5\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\155\1\0\1\155\1\270\4\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\16\155\1\0"+
    "\1\155\2\0\30\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\16\155\1\0"+
    "\1\155\2\0\23\155\1\272\4\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\4\155\16\0\1\271\6\0"+
    "\16\155\1\0\1\155\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\4\155\16\0\1\271\6\0"+
    "\12\155\1\273\3\155\1\0\1\155\2\0\4\155\1\274"+
    "\1\275\13\155\1\276\6\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\1\277"+
    "\3\155\1\300\1\301\1\155\1\302\6\155\1\0\1\155"+
    "\2\0\30\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\1\155\1\303\14\155"+
    "\1\0\1\155\2\0\30\155\1\0\2\155\1\304\3\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\30\163\1\0\6\163"+
    "\1\0\4\163\1\0\2\163\4\0\4\163\25\0\16\163"+
    "\1\0\1\163\2\0\30\163\1\0\6\163\1\0\1\305"+
    "\2\163\1\306\1\307\1\305\1\163\4\0\1\163\2\305"+
    "\1\163\1\307\24\0\16\163\1\0\1\163\2\0\30\163"+
    "\1\0\6\163\2\0\2\163\3\0\1\163\4\0\1\163"+
    "\2\0\1\163\25\0\16\163\1\0\1\163\42\0\1\205"+
    "\2\0\1\205\1\0\1\205\6\0\2\205\50\0\30\163"+
    "\1\0\6\163\1\0\3\163\1\310\1\0\2\163\4\0"+
    "\2\163\1\310\1\163\25\0\16\163\1\0\1\163\2\0"+
    "\6\311\22\163\1\0\4\163\2\311\1\0\1\311\2\163"+
    "\1\311\1\0\2\311\4\0\1\163\2\311\1\163\25\0"+
    "\3\163\1\311\3\163\1\311\5\163\1\311\1\0\1\163"+
    "\2\0\4\163\1\164\23\163\1\0\4\163\1\164\1\163"+
    "\1\165\1\171\2\163\1\171\1\0\1\172\1\163\4\0"+
    "\1\163\1\172\1\171\1\163\12\0\1\166\12\0\16\163"+
    "\1\0\1\163\6\0\1\312\30\0\1\312\2\0\1\172"+
    "\2\0\1\172\1\0\1\172\6\0\2\172\13\0\1\166"+
    "\34\0\30\163\1\0\2\163\1\313\3\163\1\0\4\163"+
    "\1\0\2\163\4\0\4\163\25\0\16\163\1\0\1\163"+
    "\2\0\2\12\1\314\1\315\1\12\1\316\5\12\1\317"+
    "\1\320\1\321\5\12\1\322\4\12\1\0\1\321\1\12"+
    "\1\322\2\12\1\316\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\1\12\1\317\5\12\1\314\2\12\1\323"+
    "\1\320\1\12\1\315\1\0\1\12\1\0\51\200\1\324"+
    "\7\200\1\325\44\200\20\0\1\326\71\0\1\326\101\0"+
    "\1\2\44\0\1\312\30\0\1\312\2\0\1\205\2\0"+
    "\1\205\1\0\1\205\6\0\2\205\47\0\51\206\4\0"+
    "\51\206\51\211\4\0\51\211\1\0\30\12\1\0\4\12"+
    "\1\327\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\2\12"+
    "\1\330\3\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\1\331\27\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\1\332\27\12\1\0\6\12"+
    "\1\0\4\12\1\0\1\12\1\332\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\13\12\1\333\14\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\4\12\1\112\23\12\1\0"+
    "\4\12\1\112\1\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\2\12\1\334"+
    "\25\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\22\12\1\335"+
    "\5\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\30\12\1\0"+
    "\1\111\5\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\23\12\1\336\4\12"+
    "\1\0\2\12\1\336\3\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\22\12"+
    "\1\245\1\336\4\12\1\0\2\12\1\336\3\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\13\12\1\337\14\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\1\340\7\12\1\224\17\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\4\12\1\341\23\12\1\0\4\12"+
    "\1\341\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\10\12\1\342\17\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\6\12\1\342\7\12\1\0\1\12\2\0\22\12"+
    "\1\254\5\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\4\12\1\254\11\12\1\0\1\12"+
    "\2\0\4\12\1\343\23\12\1\0\4\12\1\343\1\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\1\12\1\147\26\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\16\12\1\101\11\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\13\12\1\344\14\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\1\12"+
    "\1\344\14\12\1\0\1\12\2\0\30\12\1\0\4\12"+
    "\1\245\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\13\12\1\345\14\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\1\12\1\344\14\12\1\0\1\12\2\0\30\12"+
    "\1\0\2\12\1\346\3\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\30\12"+
    "\1\0\4\12\1\347\1\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\13\12"+
    "\1\350\14\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\30\12"+
    "\1\0\2\12\1\101\3\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\30\12"+
    "\1\0\1\245\2\12\1\351\2\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\2\12\1\352\3\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\13\12\1\353\14\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\24\12\1\354\3\12\1\0\6\12\1\0\2\12\1\354"+
    "\1\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\23\12\1\355\4\12\1\0\2\12\1\355"+
    "\3\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\12\1\0\2\12\1\353"+
    "\3\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\4\12\1\356\23\12\1\0"+
    "\4\12\1\356\1\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\13\12\1\221"+
    "\14\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\1\12\1\221\14\12\1\0\1\12\2\0"+
    "\30\12\1\0\4\12\1\357\1\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\6\12\1\0\2\12\1\360\1\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\10\12\1\245\17\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\16\12\1\140\11\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\3\12\1\361\4\12\1\342\11\12\1\362\3\12\1\363"+
    "\1\12\1\0\5\12\1\364\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\6\12\1\342\7\12\1\0\1\12"+
    "\2\0\13\12\1\101\14\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\30\12\1\0\4\12\1\365\1\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\30\12\1\0\2\12\1\331\3\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\1\366\27\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\2\12\1\367\25\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\6\155\1\370\21\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\16\155\1\0"+
    "\1\155\102\0\1\371\1\372\24\0\23\155\1\373\4\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\17\155"+
    "\1\374\10\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\15\155\1\375\12\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\30\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\6\155"+
    "\1\376\7\155\1\0\1\155\2\0\4\155\1\377\23\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\4\155"+
    "\1\u0100\23\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\4\155\1\u0101\23\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\30\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\2\155"+
    "\1\u0102\13\155\1\0\1\155\2\0\30\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\2\155\1\u0103\13\155\1\0\1\155\2\0\30\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\2\155\1\u0104\13\155\1\0\1\155"+
    "\2\0\30\155\1\0\2\155\1\u0105\3\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\1\0\1\u0106\30\u0107\1\u0106\6\u0107\1\u0106"+
    "\1\305\2\u0107\1\305\1\u0106\1\305\1\u0107\1\u0106\3\0"+
    "\1\163\2\305\1\u0107\25\u0106\16\u0107\1\u0106\1\u0107\2\u0106"+
    "\1\u0107\1\u0108\25\u0107\1\u0109\1\u0106\6\u0107\1\u0106\1\u010a"+
    "\1\u0109\1\u0107\1\u010a\1\u0106\2\u0107\1\u0106\3\0\1\163"+
    "\1\u0107\1\u010a\1\u0107\25\u0106\3\u0107\1\u0108\12\u0107\1\u0106"+
    "\1\u0107\1\u0106\41\0\1\u010b\2\0\1\u010c\1\0\1\u010b"+
    "\6\0\2\u010b\50\0\30\163\1\0\6\163\1\165\3\163"+
    "\1\310\1\0\2\163\4\0\2\163\1\310\1\163\25\0"+
    "\16\163\1\0\1\163\2\0\6\311\22\163\1\0\4\163"+
    "\2\311\1\165\1\311\2\163\1\311\1\0\2\311\4\0"+
    "\1\163\2\311\1\163\25\0\3\163\1\311\3\163\1\311"+
    "\5\163\1\311\1\0\1\163\42\0\1\u010b\2\0\1\u010c"+
    "\1\307\1\u010b\6\0\2\u010b\1\0\1\307\46\0\13\12"+
    "\1\u010d\14\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\1\12\1\u010d\14\12\1\0\1\12"+
    "\2\0\10\12\1\u010e\17\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\6\12\1\u010e\7\12"+
    "\1\0\1\12\2\0\10\12\1\u010f\13\12\1\u0110\3\12"+
    "\1\0\6\12\1\0\2\12\1\u0110\1\12\1\0\2\12"+
    "\4\0\4\12\25\0\6\12\1\u010f\7\12\1\0\1\12"+
    "\2\0\10\12\1\u0111\17\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\6\12\1\u0111\7\12"+
    "\1\0\1\12\2\0\4\12\1\u0112\23\12\1\0\4\12"+
    "\1\u0112\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\1\u0113\27\12\1\0"+
    "\6\12\1\0\4\12\1\0\1\12\1\u0113\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\21\12\1\u0114\6\12"+
    "\1\0\1\12\1\u0114\4\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\1\u0115"+
    "\27\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\1\0\61\u0116\1\u0117"+
    "\44\u0116\51\200\1\324\7\200\1\325\1\u0118\43\200\10\0"+
    "\1\u0119\106\0\1\u0119\7\0\13\12\1\u011a\14\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\12\1\0\1\12\1\u011b"+
    "\4\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\101\2\0\12\12\1\112\15\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\10\12\1\112"+
    "\5\12\1\0\1\12\2\0\1\u011c\27\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\12\12\1\101\3\12"+
    "\1\0\1\12\2\0\22\12\1\101\5\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\10\12\1\u011d\17\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\6\12"+
    "\1\u011d\7\12\1\0\1\12\2\0\1\u011e\27\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\12\1\0\6\12\1\0"+
    "\2\12\1\u011f\1\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\5\12\1\112\22\12\1\0"+
    "\5\12\1\112\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\1\355\27\12\1\0"+
    "\6\12\1\0\4\12\1\0\1\12\1\355\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\24\12\1\u0120\3\12"+
    "\1\0\6\12\1\0\2\12\1\u0120\1\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\24\12"+
    "\1\u0120\3\12\1\0\6\12\1\0\2\12\1\u0121\1\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\1\u0122\27\12\1\0\4\12\1\u0123\1\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\30\12\1\0\1\12\1\u0124\4\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\30\12\1\0\4\12\1\u0125\1\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\1\u0126\27\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\30\12\1\0\4\12\1\u0127\1\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\10\12\1\u0128\17\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\21\12\1\u0129\6\12\1\0\1\12\1\u0129\4\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\2\12\1\u012a\25\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\7\12"+
    "\1\u012a\6\12\1\0\1\12\2\0\22\12\1\u012b\5\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\10\12\1\u012c\17\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\4\12"+
    "\1\u012d\1\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\26\12\1\u012e\1\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\12\12"+
    "\1\u012f\3\12\1\0\1\12\2\0\16\12\1\u0130\11\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\1\u0131"+
    "\5\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\13\12\1\u0132\14\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\12\1\0\2\12\1\u0133"+
    "\3\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\2\155\1\u0134\25\155\1\0"+
    "\3\155\1\u0134\2\155\1\0\4\155\1\0\2\155\4\0"+
    "\4\155\16\0\1\271\6\0\16\155\1\0\1\155\1\0"+
    "\31\371\1\u0135\47\371\1\u0136\24\371\31\372\1\u0137\50\372"+
    "\1\u0136\23\372\1\0\30\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\5\155"+
    "\1\u0138\10\155\1\0\1\155\2\0\30\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\3\155\1\u0139\16\0"+
    "\1\271\6\0\16\155\1\0\1\155\2\0\25\155\1\u0134"+
    "\2\155\1\0\6\155\1\0\4\155\1\0\2\155\4\0"+
    "\4\155\16\0\1\271\6\0\16\155\1\0\1\155\2\0"+
    "\30\155\1\0\6\155\1\0\4\155\1\0\2\155\4\0"+
    "\4\155\16\0\1\271\6\0\1\155\1\u013a\14\155\1\0"+
    "\1\155\2\0\30\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\11\155\1\u013b"+
    "\4\155\1\0\1\155\2\0\23\155\1\u0134\4\155\1\0"+
    "\6\155\1\0\4\155\1\0\2\155\4\0\4\155\16\0"+
    "\1\271\6\0\16\155\1\0\1\155\2\0\21\155\1\u013c"+
    "\6\155\1\0\6\155\1\0\4\155\1\0\2\155\4\0"+
    "\4\155\16\0\1\271\6\0\4\155\1\u013d\11\155\1\0"+
    "\1\155\2\0\30\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\4\155\1\u0100"+
    "\11\155\1\0\1\155\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\4\155\16\0\1\271\6\0"+
    "\2\155\1\u013e\13\155\1\0\1\155\2\0\30\155\1\0"+
    "\6\155\1\0\4\155\1\0\2\155\4\0\4\155\16\0"+
    "\1\271\6\0\3\155\1\u013f\12\155\1\0\1\155\2\0"+
    "\17\155\1\u0140\10\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\16\155\1\0"+
    "\1\155\42\0\1\u0106\2\0\1\u0106\1\0\1\u0106\6\0"+
    "\2\u0106\50\0\30\163\1\0\6\163\1\0\1\u0107\2\163"+
    "\1\u0107\1\0\1\u0107\1\163\4\0\1\163\2\u0107\1\163"+
    "\25\0\16\163\1\0\1\163\2\0\30\163\1\0\6\163"+
    "\1\0\1\u0107\2\163\1\u0141\1\0\1\u0107\1\163\4\0"+
    "\1\163\1\u0107\1\u0141\1\163\25\0\16\163\1\0\1\163"+
    "\2\0\6\u0142\22\163\1\0\4\163\2\u0142\1\0\1\u0142"+
    "\2\163\1\u0142\1\0\2\u0142\4\0\1\163\2\u0142\1\163"+
    "\25\0\3\163\1\u0142\3\163\1\u0142\5\163\1\u0142\1\0"+
    "\1\163\1\0\1\u0106\30\u0107\1\u0106\6\u0107\1\u0106\1\u010a"+
    "\2\u0107\1\u010a\1\u0106\2\u0107\1\u0106\3\0\1\163\1\u0107"+
    "\1\u010a\1\u0107\25\u0106\16\u0107\1\u0106\1\u0107\42\u0106\1\u010b"+
    "\2\u0106\1\u010b\1\u0106\1\u010b\2\u0106\4\0\2\u010b\51\u0106"+
    "\1\u0143\25\u0106\1\u0144\10\u0106\1\u0145\1\u0144\1\u0106\1\u0145"+
    "\4\u0106\4\0\1\u0106\1\u0145\31\u0106\1\u0143\15\u0106\1\0"+
    "\1\u0146\27\12\1\0\6\12\1\0\4\12\1\0\1\12"+
    "\1\u0146\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\21\12\1\u0147\6\12\1\0\1\12\1\u0147\4\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\13\12\1\u0148\14\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\1\12\1\u0148"+
    "\14\12\1\0\1\12\2\0\15\12\1\u0149\12\12\1\0"+
    "\1\u0149\5\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\15\12\1\u0148\12\12"+
    "\1\0\1\u0148\5\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\23\12\1\u014a"+
    "\4\12\1\0\2\12\1\u014a\3\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\14\12\1\u014b\13\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\13\12\1\u014b\2\12\1\0"+
    "\1\12\2\0\1\u014c\27\12\1\0\6\12\1\0\4\12"+
    "\1\0\1\12\1\u014c\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\13\12\1\u014d\14\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\1\0\61\u0116\1\u0117\1\u014e\43\u0116\51\u014f\1\2"+
    "\54\u014f\20\0\1\213\71\0\1\213\14\0\3\12\1\101"+
    "\24\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\1\u0150\27\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\1\12\1\u0151\26\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\15\12\1\u0152\12\12"+
    "\1\0\1\u0152\5\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\30\12\1\0"+
    "\1\12\1\111\4\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\13\12\1\245"+
    "\14\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\3\12\1\221"+
    "\24\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\15\12\1\221\1\0\1\12\2\0\3\12"+
    "\1\u0153\24\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\15\12\1\221\1\0\1\12\2\0"+
    "\30\12\1\0\1\u0154\5\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\1\u0155"+
    "\27\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\30\12\1\0"+
    "\5\12\1\u0156\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\13\12"+
    "\1\u0157\2\12\1\0\1\12\2\0\30\12\1\0\2\12"+
    "\1\111\3\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\2\12\1\u0158\25\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\2\12\1\101\25\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\15\12\1\112\12\12"+
    "\1\0\1\112\5\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\7\12\1\112"+
    "\20\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\12\12\1\112\3\12\1\0\1\12\2\0"+
    "\17\12\1\u0156\10\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\1\12\1\u0159\4\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\2\12\1\227\25\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\10\12\1\u015a\17\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\10\12\1\u0151\17\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\1\12\1\u015b\4\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\3\12\1\335\24\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\13\12\1\331\14\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\10\12\1\u015c\17\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\1\0"+
    "\51\371\4\0\51\371\50\0\1\u015d\55\0\51\372\4\0"+
    "\51\372\1\0\30\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\3\155\1\u015e\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\30\155\1\0\4\155\1\u015f\1\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\4\155\1\u0160\23\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\24\155"+
    "\1\u0161\3\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\25\155\1\u0162\2\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\30\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\4\155"+
    "\1\u0163\11\155\1\0\1\155\2\0\30\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\10\155\1\u0164\5\155\1\0\1\155\2\0\30\155"+
    "\1\0\6\155\1\0\4\155\1\0\1\155\1\u0165\4\0"+
    "\4\155\16\0\1\271\6\0\16\155\1\0\1\155\2\0"+
    "\30\155\1\0\6\155\1\0\4\155\1\0\2\155\4\0"+
    "\3\155\1\u0166\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\1\0\1\u0106\30\u0107\1\u0106\6\u0107\1\u0106\3\u0107\1\u0141"+
    "\1\u0106\2\u0107\1\u0106\3\0\1\163\1\u0107\1\u0141\1\u0107"+
    "\25\u0106\16\u0107\1\u0106\1\u0107\2\u0106\6\u0142\22\u0107\1\u0106"+
    "\4\u0107\2\u0142\1\u0106\1\u0142\2\u0107\1\u0142\1\u0106\2\u0142"+
    "\1\u0106\3\0\1\163\2\u0142\1\u0107\25\u0106\3\u0107\1\u0142"+
    "\3\u0107\1\u0142\5\u0107\1\u0142\1\u0106\1\u0107\1\u0106\41\0"+
    "\1\u0106\2\0\1\u0167\1\0\1\u0106\6\0\1\u0106\1\u0167"+
    "\50\0\6\u0168\27\0\2\u0168\1\0\1\u0168\2\0\1\u0168"+
    "\1\0\2\u0168\5\0\2\u0168\31\0\1\u0168\3\0\1\u0168"+
    "\5\0\1\u0168\3\0\41\u0106\1\u0145\2\u0106\1\u0145\4\u0106"+
    "\4\0\1\u0106\1\u0145\47\u0106\1\0\22\12\1\u0169\5\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\4\12\1\u0169\11\12\1\0\1\12\2\0\30\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\3\12"+
    "\1\u016a\25\0\16\12\1\0\1\12\2\0\4\12\1\u0147"+
    "\23\12\1\0\4\12\1\u0147\1\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\2\12\1\u016b\25\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\7\12\1\u016b\6\12\1\0"+
    "\1\12\2\0\7\12\1\u016c\20\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\12\12\1\u016c"+
    "\3\12\1\0\1\12\2\0\4\12\1\u016d\23\12\1\0"+
    "\4\12\1\u016d\1\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\10\12\1\u016e"+
    "\17\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\6\12\1\u016e\7\12\1\0\1\12\2\0"+
    "\30\12\1\0\2\12\1\u016f\3\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\2\12\1\245\25\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\13\12\1\111\14\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\16\12\1\0\1\12\2\0"+
    "\24\12\1\221\3\12\1\0\6\12\1\0\2\12\1\221"+
    "\1\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\4\12\1\112\23\12\1\0\4\12\1\u0170"+
    "\1\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\2\12\1\u0171\25\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\3\12\1\u0172\24\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\1\u0173\27\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\4\12\1\u0174\1\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\2\12\1\u0175\3\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\4\12\1\u0176\1\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\2\12\1\222\3\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\4\12\1\u0177\1\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\16\12\1\u0178\11\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\21\155\1\u0179\6\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\30\155\1\0\1\155"+
    "\1\u017a\4\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\30\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\4\155\1\u0134\11\155\1\0\1\155"+
    "\2\0\4\155\1\u0102\23\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\4\155\1\u017b\23\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\30\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\6\155\1\u017c\7\155\1\0\1\155\2\0\30\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\6\155\1\u017d\7\155\1\0\1\155"+
    "\2\0\30\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\1\155\1\u0160\14\155"+
    "\1\0\1\155\2\0\30\155\1\0\1\155\1\u017e\4\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\1\0\44\u0106\1\u0167\4\u0106"+
    "\4\0\1\u0106\1\u0167\50\u0106\6\u0168\27\u0106\2\u0168\1\u0106"+
    "\1\u0168\2\u0106\1\u0168\1\u0106\2\u0168\1\u0106\4\0\2\u0168"+
    "\31\u0106\1\u0168\3\u0106\1\u0168\5\u0106\1\u0168\3\u0106\1\0"+
    "\22\12\1\u0147\5\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\4\12\25\0\4\12\1\u0147\11\12\1\0"+
    "\1\12\2\0\30\12\1\0\6\12\1\0\4\12\1\0"+
    "\2\12\4\0\3\12\1\u017f\25\0\16\12\1\0\1\12"+
    "\2\0\23\12\1\u0180\4\12\1\0\2\12\1\u0180\3\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\16\12\1\u0181\11\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\2\12"+
    "\1\u0181\13\12\1\0\1\12\2\0\22\12\1\u0182\5\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\4\12\1\u0182\11\12\1\0\1\12\2\0\23\12"+
    "\1\u0147\4\12\1\0\2\12\1\u0147\3\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\30\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\3\12\1\u0183\25\0\16\12\1\0\1\12\2\0"+
    "\30\12\1\0\6\12\1\0\4\12\1\0\2\12\4\0"+
    "\3\12\1\u0184\25\0\16\12\1\0\1\12\2\0\30\12"+
    "\1\0\4\12\1\u0172\1\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\16\12"+
    "\1\u0185\11\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\2\12"+
    "\1\111\25\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\30\12"+
    "\1\0\1\u0186\5\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\30\12\1\0"+
    "\4\12\1\u011a\1\12\1\0\4\12\1\0\2\12\4\0"+
    "\4\12\25\0\16\12\1\0\1\12\2\0\1\222\27\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\1\u0187"+
    "\5\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\1\155\1\u0188\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\30\155\1\0\1\155"+
    "\1\u0189\4\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\21\155"+
    "\1\u0134\6\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\30\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\2\155\1\u018a\13\155"+
    "\1\0\1\155\2\0\4\155\1\u0134\23\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\30\155\1\0\4\155"+
    "\1\u018b\1\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\10\12"+
    "\1\u018c\17\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\6\12\1\u018c\7\12\1\0\1\12"+
    "\2\0\3\12\1\u0147\24\12\1\0\6\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\15\12\1\u0147\1\0"+
    "\1\12\2\0\17\12\1\u018d\10\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\5\12\1\u018d"+
    "\10\12\1\0\1\12\2\0\2\12\1\u018e\25\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\16\12\1\u018f\11\12\1\0"+
    "\6\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\12\1\0\5\12\1\101"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\12\1\0\2\12\1\335\3\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\16\12"+
    "\1\0\1\12\2\0\30\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\14\155"+
    "\1\u0190\1\155\1\0\1\155\2\0\16\155\1\u0191\11\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\15\155"+
    "\1\u0134\12\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\22\155\1\u0192\5\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\16\12\1\u0193\11\12\1\0\6\12"+
    "\1\0\4\12\1\0\2\12\4\0\4\12\25\0\2\12"+
    "\1\u0193\13\12\1\0\1\12\2\0\1\u0194\27\12\1\0"+
    "\6\12\1\0\4\12\1\0\1\12\1\u0194\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\16\12\1\u0195\11\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\30\12\1\0\1\u0173"+
    "\5\12\1\0\4\12\1\0\2\12\4\0\4\12\25\0"+
    "\16\12\1\0\1\12\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\3\155\1\u0196\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\30\155\1\0\1\155"+
    "\1\u0197\4\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\17\155"+
    "\1\u0198\10\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\15\12\1\u0147\12\12\1\0\1\u0147\5\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\2\12\1\u0148\25\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\7\12\1\u0148"+
    "\6\12\1\0\1\12\2\0\30\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\13\12\1\u0199"+
    "\2\12\1\0\1\12\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\4\155\16\0\1\271\6\0"+
    "\5\155\1\u019a\10\155\1\0\1\155\2\0\30\155\1\0"+
    "\6\155\1\0\4\155\1\0\2\155\4\0\4\155\16\0"+
    "\1\271\6\0\13\155\1\u019b\2\155\1\0\1\155\2\0"+
    "\16\155\1\u019c\11\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\16\155\1\0"+
    "\1\155\2\0\17\12\1\u019d\10\12\1\0\6\12\1\0"+
    "\4\12\1\0\2\12\4\0\4\12\25\0\16\12\1\0"+
    "\1\12\2\0\30\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\4\155\16\0\1\271\6\0\2\155\1\u019e"+
    "\13\155\1\0\1\155\2\0\22\155\1\u019f\5\155\1\0"+
    "\6\155\1\0\4\155\1\0\2\155\4\0\4\155\16\0"+
    "\1\271\6\0\16\155\1\0\1\155\2\0\30\155\1\0"+
    "\1\u01a0\5\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\10\12"+
    "\1\u01a1\17\12\1\0\6\12\1\0\4\12\1\0\2\12"+
    "\4\0\4\12\25\0\16\12\1\0\1\12\2\0\30\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\4\155\1\u01a2\11\155\1\0\1\155"+
    "\2\0\6\155\1\u0134\21\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\22\155\1\u01a3\5\155\1\0\6\155"+
    "\1\0\4\155\1\0\2\155\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\13\12\1\u01a4\14\12"+
    "\1\0\6\12\1\0\4\12\1\0\2\12\4\0\4\12"+
    "\25\0\16\12\1\0\1\12\2\0\23\155\1\u01a5\4\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\30\155"+
    "\1\0\4\155\1\u01a6\1\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\30\12\1\0\4\12\1\144\1\12\1\0\4\12"+
    "\1\0\2\12\4\0\4\12\25\0\16\12\1\0\1\12"+
    "\2\0\30\155\1\0\6\155\1\0\4\155\1\0\2\155"+
    "\4\0\3\155\1\u01a7\16\0\1\271\6\0\16\155\1\0"+
    "\1\155\2\0\30\155\1\0\6\155\1\0\4\155\1\0"+
    "\2\155\4\0\3\155\1\u01a8\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\30\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\15\155"+
    "\1\u01a9\1\0\1\155\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\4\155\16\0\1\271\6\0"+
    "\12\155\1\u01aa\3\155\1\0\1\155\2\0\30\155\1\0"+
    "\6\155\1\0\4\155\1\0\1\155\1\u01ab\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\30\155"+
    "\1\0\4\155\1\u01ac\1\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\23\155\1\u01ad\4\155\1\0\6\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\2\0\1\u01ae\27\155\1\0\6\155\1\0"+
    "\4\155\1\0\2\155\4\0\4\155\16\0\1\271\6\0"+
    "\16\155\1\0\1\155\2\0\30\155\1\0\6\155\1\0"+
    "\4\155\1\0\1\155\1\u0134\4\0\4\155\16\0\1\271"+
    "\6\0\16\155\1\0\1\155\2\0\3\155\1\u01af\24\155"+
    "\1\0\6\155\1\0\4\155\1\0\2\155\4\0\4\155"+
    "\16\0\1\271\6\0\16\155\1\0\1\155\2\0\30\155"+
    "\1\0\4\155\1\u01b0\1\155\1\0\4\155\1\0\2\155"+
    "\4\0\4\155\16\0\1\271\6\0\16\155\1\0\1\155"+
    "\2\0\30\155\1\0\1\155\1\u0134\4\155\1\0\4\155"+
    "\1\0\2\155\4\0\4\155\16\0\1\271\6\0\16\155"+
    "\1\0\1\155\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[34486];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\36\1\2\11\16\1\4\11\3\1\1\11"+
    "\74\1\2\0\4\1\2\11\2\1\1\11\1\0\1\11"+
    "\2\0\1\11\1\1\2\0\1\11\2\0\1\11\55\1"+
    "\1\0\15\1\1\0\2\1\1\0\12\1\2\0\42\1"+
    "\2\0\33\1\2\0\1\1\1\0\33\1\3\0\26\1"+
    "\1\11\1\0\15\1\1\11\123\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[432];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int lineNumber = 0;
public int chars = 0;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 240) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return ERROR;
            }
          case 29: break;
          case 2: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return CONSTANT;
            }
          case 30: break;
          case 3: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return INT;
            }
          case 31: break;
          case 4: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return AROP;
            }
          case 32: break;
          case 5: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return BRACKET;
            }
          case 33: break;
          case 6: 
            { chars = 0; lineNumber=yyline; lexeme="\n";lineNumber=yyline; return NEWLINE;
            }
          case 34: break;
          case 7: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return BLANK;
            }
          case 35: break;
          case 8: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return CMPOP;
            }
          case 36: break;
          case 9: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return ASSOP;
            }
          case 37: break;
          case 10: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return LOGOP;
            }
          case 38: break;
          case 11: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return CONCAT;
            }
          case 39: break;
          case 12: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return PRNTHSS;
            }
          case 40: break;
          case 13: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return CURLY;
            }
          case 41: break;
          case 14: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return SEMICOLON;
            }
          case 42: break;
          case 15: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return COMMA;
            }
          case 43: break;
          case 16: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return CTRLSTRCT;
            }
          case 44: break;
          case 17: 
            { chars += yytext().length(); if(yytext().contains("\n")){chars=0; lineNumber=yyline;} lexeme=yytext(); return COMMENT;
            }
          case 45: break;
          case 18: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return RSRVWRDS;
            }
          case 46: break;
          case 19: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return VARID;
            }
          case 47: break;
          case 20: 
            { chars += yytext().length(); lexeme=yytext(); lineNumber=yyline;return DOUBLE;
            }
          case 48: break;
          case 21: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return INCDECOP;
            }
          case 49: break;
          case 22: 
            { chars += yytext().length(); lexeme=yytext(); lineNumber=yyline; return STRING;
            }
          case 50: break;
          case 23: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return PHP;
            }
          case 51: break;
          case 24: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return BOOL;
            }
          case 52: break;
          case 25: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return RSRVDVAR;
            }
          case 53: break;
          case 26: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return DB;
            }
          case 54: break;
          case 27: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return MAGCONSTANT;
            }
          case 55: break;
          case 28: 
            { chars += yytext().length(); lexeme=yytext();lineNumber=yyline; return FUNC;
            }
          case 56: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
